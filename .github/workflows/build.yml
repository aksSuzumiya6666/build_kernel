name: Build ARM64 Kernel

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'GitHub repository URL to clone the kernel source from'
        required: true
        default: 'https://github.com/aksSuzumiya6666/linux.git'
      CLANG_URL:
        description: 'Clang URL'
        required: true
        default: 'https://github.com/ZyCromerZ/Clang/releases/download/20.0.0git-20241103-release/Clang-20.0.0git-20241103.tar.gz'  
      branch:
        description: 'Branch of the repository to use'
        required: true
        default: 'msm89x7/6.12.5'
      defconfig:
        description: 'Defconfig file to use for the build'
        required: true
        default: 'defconfig'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu bc bison flex libssl-dev make build-essential libelf-dev debhelper-compat

    - name: Download and extract Clang
      run: |
        mkdir clang
        wget -q ${{ github.event.inputs.CLANG_URL }} -O clang.tar.gz
        tar -C clang/ -zxf clang.tar.gz
        export PATH=$GITHUB_WORKSPACE/clang/bin:$PATH

    - name: Check clang version
      run: |
        export PATH=$GITHUB_WORKSPACE/clang/bin:$PATH
        clang --version

    - name: Clone the kernel source
      run: |
        mkdir linux-kernel
        cd linux-kernel
        git clone --branch ${{ github.event.inputs.branch }} ${{ github.event.inputs.repository }} kernel-src

    - name: Build the kernel
      run: |
        cd linux-kernel/kernel-src
        export PATH=$GITHUB_WORKSPACE/clang/bin:$PATH
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CC=clang
        export ARCH=arm64
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang ${{ github.event.inputs.defconfig }}
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang -j$(nproc)
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang deb-pkg -j$(nproc)
        tar -czf qcom_dtb.tar.gz arch/arm64/boot/dts/qcom/*.dtb

    - name: Upload kernel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-artifacts-${{ env.BUILD_TIME }}
        path: |
          linux-kernel/kernel-src/arch/arm64/boot/Image.gz
          linux-kernel/kernel-src/qcom_dtb.tar.gz
          linux-kernel/linux-headers-*.deb
          linux-kernel/linux-image-*.deb
          linux-kernel/linux-libc-*.deb
